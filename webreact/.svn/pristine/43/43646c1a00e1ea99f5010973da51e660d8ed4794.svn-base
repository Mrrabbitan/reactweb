{"version":3,"file":"Snap.js","sources":["../../../src/ol/interaction/Snap.js"],"sourcesContent":["/**\n * @module ol/interaction/Snap\n */\nimport {getUid} from '../util.js';\nimport {CollectionEvent} from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {distance as coordinateDistance, squaredDistance as squaredCoordinateDistance, closestOnCircle, closestOnSegment, squaredDistanceToSegment} from '../coordinate.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {boundingExtent, createEmpty} from '../extent.js';\nimport {TRUE, FALSE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport {fromCircle} from '../geom/Polygon.js';\nimport PointerInteraction, {handleEvent as handlePointerEvent} from '../interaction/Pointer.js';\nimport {getValues} from '../obj.js';\nimport {VectorSourceEvent} from '../source/Vector.js';\nimport VectorEventType from '../source/VectorEventType.js';\nimport RBush from '../structs/RBush.js';\n\n\n/**\n * @typedef {Object} Result\n * @property {boolean} snapped\n * @property {module:ol/coordinate~Coordinate|null} vertex\n * @property {module:ol/pixel~Pixel|null} vertexPixel\n */\n\n\n/**\n * @typedef {Object} SegmentData\n * @property {module:ol/Feature} feature\n * @property {Array.<module:ol/coordinate~Coordinate>} segment\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/Collection.<module:ol/Feature>} [features] Snap to these features. Either this option or source should be provided.\n * @property {boolean} [edge=true] Snap to edges.\n * @property {boolean} [vertex=true] Snap to vertices.\n * @property {number} [pixelTolerance=10] Pixel tolerance for considering the pointer close enough to a segment or\n * vertex for snapping.\n * @property {module:ol/source/Vector} [source] Snap to features from this source. Either this option or features should be provided\n */\n\n\n/**\n * @classdesc\n * Handles snapping of vector features while modifying or drawing them.  The\n * features can come from a {@link module:ol/source/Vector} or {@link module:ol/Collection~Collection}\n * Any interaction object that allows the user to interact\n * with the features using the mouse can benefit from the snapping, as long\n * as it is added before.\n *\n * The snap interaction modifies map browser event `coordinate` and `pixel`\n * properties to force the snap to occur to any interaction that them.\n *\n * Example:\n *\n *     import Snap from 'ol/interaction/Snap';\n *\n *     var snap = new Snap({\n *       source: source\n *     });\n *\n * @api\n */\nclass Snap extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/Snap~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent,\n      handleDownEvent: TRUE,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @type {module:ol/source/Vector}\n     * @private\n     */\n    this.source_ = options.source ? options.source : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.vertex_ = options.vertex !== undefined ? options.vertex : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.edge_ = options.edge !== undefined ? options.edge : true;\n\n    /**\n     * @type {module:ol/Collection.<module:ol/Feature>}\n     * @private\n     */\n    this.features_ = options.features ? options.features : null;\n\n    /**\n     * @type {Array.<module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featuresListenerKeys_ = [];\n\n    /**\n     * @type {Object.<number, module:ol/events~EventsKey>}\n     * @private\n     */\n    this.featureChangeListenerKeys_ = {};\n\n    /**\n     * Extents are preserved so indexed segment can be quickly removed\n     * when its feature geometry changes\n     * @type {Object.<number, module:ol/extent~Extent>}\n     * @private\n     */\n    this.indexedFeaturesExtents_ = {};\n\n    /**\n     * If a feature geometry changes while a pointer drag|move event occurs, the\n     * feature doesn't get updated right away.  It will be at the next 'pointerup'\n     * event fired.\n     * @type {!Object.<number, module:ol/Feature>}\n     * @private\n     */\n    this.pendingFeatures_ = {};\n\n    /**\n     * Used for distance sorting in sortByDistance_\n     * @type {module:ol/coordinate~Coordinate}\n     * @private\n     */\n    this.pixelCoordinate_ = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.pixelTolerance_ = options.pixelTolerance !== undefined ?\n      options.pixelTolerance : 10;\n\n    /**\n     * @type {function(module:ol/interaction/Snap~SegmentData, module:ol/interaction/Snap~SegmentData): number}\n     * @private\n     */\n    this.sortByDistance_ = sortByDistance.bind(this);\n\n\n    /**\n    * Segment RTree for each layer\n    * @type {module:ol/structs/RBush.<module:ol/interaction/Snap~SegmentData>}\n    * @private\n    */\n    this.rBush_ = new RBush();\n\n\n    /**\n    * @const\n    * @private\n    * @type {Object.<string, function(module:ol/Feature, module:ol/geom/Geometry)>}\n    */\n    this.SEGMENT_WRITERS_ = {\n      'Point': this.writePointGeometry_,\n      'LineString': this.writeLineStringGeometry_,\n      'LinearRing': this.writeLineStringGeometry_,\n      'Polygon': this.writePolygonGeometry_,\n      'MultiPoint': this.writeMultiPointGeometry_,\n      'MultiLineString': this.writeMultiLineStringGeometry_,\n      'MultiPolygon': this.writeMultiPolygonGeometry_,\n      'GeometryCollection': this.writeGeometryCollectionGeometry_,\n      'Circle': this.writeCircleGeometry_\n    };\n  }\n\n  /**\n   * Add a feature to the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature.\n   * @param {boolean=} opt_listen Whether to listen to the feature change or not\n   *     Defaults to `true`.\n   * @api\n   */\n  addFeature(feature, opt_listen) {\n    const register = opt_listen !== undefined ? opt_listen : true;\n    const feature_uid = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometry.getType()];\n      if (segmentWriter) {\n        this.indexedFeaturesExtents_[feature_uid] = geometry.getExtent(createEmpty());\n        segmentWriter.call(this, feature, geometry);\n      }\n    }\n\n    if (register) {\n      this.featureChangeListenerKeys_[feature_uid] = listen(\n        feature,\n        EventType.CHANGE,\n        this.handleFeatureChange_, this);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  forEachFeatureAdd_(feature) {\n    this.addFeature(feature);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature.\n   * @private\n   */\n  forEachFeatureRemove_(feature) {\n    this.removeFeature(feature);\n  }\n\n  /**\n   * @return {module:ol/Collection.<module:ol/Feature>|Array.<module:ol/Feature>} Features.\n   * @private\n   */\n  getFeatures_() {\n    let features;\n    if (this.features_) {\n      features = this.features_;\n    } else if (this.source_) {\n      features = this.source_.getFeatures();\n    }\n    return (\n      /** @type {!Array.<module:ol/Feature>|!module:ol/Collection.<module:ol/Feature>} */ (features)\n    );\n  }\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureAdd_(evt) {\n    let feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.addFeature(/** @type {module:ol/Feature} */ (feature));\n  }\n\n  /**\n   * @param {module:ol/source/Vector|module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  handleFeatureRemove_(evt) {\n    let feature;\n    if (evt instanceof VectorSourceEvent) {\n      feature = evt.feature;\n    } else if (evt instanceof CollectionEvent) {\n      feature = evt.element;\n    }\n    this.removeFeature(/** @type {module:ol/Feature} */ (feature));\n  }\n\n  /**\n   * @param {module:ol/events/Event} evt Event.\n   * @private\n   */\n  handleFeatureChange_(evt) {\n    const feature = /** @type {module:ol/Feature} */ (evt.target);\n    if (this.handlingDownUpSequence) {\n      const uid = getUid(feature);\n      if (!(uid in this.pendingFeatures_)) {\n        this.pendingFeatures_[uid] = feature;\n      }\n    } else {\n      this.updateFeature_(feature);\n    }\n  }\n\n  /**\n   * Remove a feature from the collection of features that we may snap to.\n   * @param {module:ol/Feature} feature Feature\n   * @param {boolean=} opt_unlisten Whether to unlisten to the feature change\n   *     or not. Defaults to `true`.\n   * @api\n   */\n  removeFeature(feature, opt_unlisten) {\n    const unregister = opt_unlisten !== undefined ? opt_unlisten : true;\n    const feature_uid = getUid(feature);\n    const extent = this.indexedFeaturesExtents_[feature_uid];\n    if (extent) {\n      const rBush = this.rBush_;\n      const nodesToRemove = [];\n      rBush.forEachInExtent(extent, function(node) {\n        if (feature === node.feature) {\n          nodesToRemove.push(node);\n        }\n      });\n      for (let i = nodesToRemove.length - 1; i >= 0; --i) {\n        rBush.remove(nodesToRemove[i]);\n      }\n    }\n\n    if (unregister) {\n      unlistenByKey(this.featureChangeListenerKeys_[feature_uid]);\n      delete this.featureChangeListenerKeys_[feature_uid];\n    }\n  }\n\n  /**\n   * @inheritDoc\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const keys = this.featuresListenerKeys_;\n    const features = this.getFeatures_();\n\n    if (currentMap) {\n      keys.forEach(unlistenByKey);\n      keys.length = 0;\n      features.forEach(this.forEachFeatureRemove_.bind(this));\n    }\n    super.setMap(map);\n\n    if (map) {\n      if (this.features_) {\n        keys.push(\n          listen(this.features_, CollectionEventType.ADD,\n            this.handleFeatureAdd_, this),\n          listen(this.features_, CollectionEventType.REMOVE,\n            this.handleFeatureRemove_, this)\n        );\n      } else if (this.source_) {\n        keys.push(\n          listen(this.source_, VectorEventType.ADDFEATURE,\n            this.handleFeatureAdd_, this),\n          listen(this.source_, VectorEventType.REMOVEFEATURE,\n            this.handleFeatureRemove_, this)\n        );\n      }\n      features.forEach(this.forEachFeatureAdd_.bind(this));\n    }\n  }\n\n  /**\n   * @param {module:ol/pixel~Pixel} pixel Pixel\n   * @param {module:ol/coordinate~Coordinate} pixelCoordinate Coordinate\n   * @param {module:ol/PluggableMap} map Map.\n   * @return {module:ol/interaction/Snap~Result} Snap result\n   */\n  snapTo(pixel, pixelCoordinate, map) {\n\n    const lowerLeft = map.getCoordinateFromPixel(\n      [pixel[0] - this.pixelTolerance_, pixel[1] + this.pixelTolerance_]);\n    const upperRight = map.getCoordinateFromPixel(\n      [pixel[0] + this.pixelTolerance_, pixel[1] - this.pixelTolerance_]);\n    const box = boundingExtent([lowerLeft, upperRight]);\n\n    let segments = this.rBush_.getInExtent(box);\n\n    // If snapping on vertices only, don't consider circles\n    if (this.vertex_ && !this.edge_) {\n      segments = segments.filter(function(segment) {\n        return segment.feature.getGeometry().getType() !==\n            GeometryType.CIRCLE;\n      });\n    }\n\n    let snappedToVertex = false;\n    let snapped = false;\n    let vertex = null;\n    let vertexPixel = null;\n    let dist, pixel1, pixel2, squaredDist1, squaredDist2;\n    if (segments.length > 0) {\n      this.pixelCoordinate_ = pixelCoordinate;\n      segments.sort(this.sortByDistance_);\n      const closestSegment = segments[0].segment;\n      const isCircle = segments[0].feature.getGeometry().getType() ===\n          GeometryType.CIRCLE;\n      if (this.vertex_ && !this.edge_) {\n        pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n        pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n        squaredDist1 = squaredCoordinateDistance(pixel, pixel1);\n        squaredDist2 = squaredCoordinateDistance(pixel, pixel2);\n        dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n        snappedToVertex = dist <= this.pixelTolerance_;\n        if (snappedToVertex) {\n          snapped = true;\n          vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n          vertexPixel = map.getPixelFromCoordinate(vertex);\n        }\n      } else if (this.edge_) {\n        if (isCircle) {\n          vertex = closestOnCircle(pixelCoordinate,\n            /** @type {module:ol/geom/Circle} */ (segments[0].feature.getGeometry()));\n        } else {\n          vertex = closestOnSegment(pixelCoordinate, closestSegment);\n        }\n        vertexPixel = map.getPixelFromCoordinate(vertex);\n        if (coordinateDistance(pixel, vertexPixel) <= this.pixelTolerance_) {\n          snapped = true;\n          if (this.vertex_ && !isCircle) {\n            pixel1 = map.getPixelFromCoordinate(closestSegment[0]);\n            pixel2 = map.getPixelFromCoordinate(closestSegment[1]);\n            squaredDist1 = squaredCoordinateDistance(vertexPixel, pixel1);\n            squaredDist2 = squaredCoordinateDistance(vertexPixel, pixel2);\n            dist = Math.sqrt(Math.min(squaredDist1, squaredDist2));\n            snappedToVertex = dist <= this.pixelTolerance_;\n            if (snappedToVertex) {\n              vertex = squaredDist1 > squaredDist2 ? closestSegment[1] : closestSegment[0];\n              vertexPixel = map.getPixelFromCoordinate(vertex);\n            }\n          }\n        }\n      }\n      if (snapped) {\n        vertexPixel = [Math.round(vertexPixel[0]), Math.round(vertexPixel[1])];\n      }\n    }\n    return (\n      /** @type {module:ol/interaction/Snap~Result} */ ({\n        snapped: snapped,\n        vertex: vertex,\n        vertexPixel: vertexPixel\n      })\n    );\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @private\n   */\n  updateFeature_(feature) {\n    this.removeFeature(feature, false);\n    this.addFeature(feature, false);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Circle} geometry Geometry.\n   * @private\n   */\n  writeCircleGeometry_(feature, geometry) {\n    const polygon = fromCircle(geometry);\n    const coordinates = polygon.getCoordinates()[0];\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/GeometryCollection} geometry Geometry.\n   * @private\n   */\n  writeGeometryCollectionGeometry_(feature, geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0; i < geometries.length; ++i) {\n      const segmentWriter = this.SEGMENT_WRITERS_[geometries[i].getType()];\n      if (segmentWriter) {\n        segmentWriter.call(this, feature, geometries[i]);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/LineString} geometry Geometry.\n   * @private\n   */\n  writeLineStringGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n      const segment = coordinates.slice(i, i + 2);\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: segment\n      });\n      this.rBush_.insert(boundingExtent(segment), segmentData);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiLineString} geometry Geometry.\n   * @private\n   */\n  writeMultiLineStringGeometry_(feature, geometry) {\n    const lines = geometry.getCoordinates();\n    for (let j = 0, jj = lines.length; j < jj; ++j) {\n      const coordinates = lines[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPoint} geometry Geometry.\n   * @private\n   */\n  writeMultiPointGeometry_(feature, geometry) {\n    const points = geometry.getCoordinates();\n    for (let i = 0, ii = points.length; i < ii; ++i) {\n      const coordinates = points[i];\n      const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n        feature: feature,\n        segment: [coordinates, coordinates]\n      });\n      this.rBush_.insert(geometry.getExtent(), segmentData);\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/MultiPolygon} geometry Geometry.\n   * @private\n   */\n  writeMultiPolygonGeometry_(feature, geometry) {\n    const polygons = geometry.getCoordinates();\n    for (let k = 0, kk = polygons.length; k < kk; ++k) {\n      const rings = polygons[k];\n      for (let j = 0, jj = rings.length; j < jj; ++j) {\n        const coordinates = rings[j];\n        for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n          const segment = coordinates.slice(i, i + 2);\n          const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n            feature: feature,\n            segment: segment\n          });\n          this.rBush_.insert(boundingExtent(segment), segmentData);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Point} geometry Geometry.\n   * @private\n   */\n  writePointGeometry_(feature, geometry) {\n    const coordinates = geometry.getCoordinates();\n    const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n      feature: feature,\n      segment: [coordinates, coordinates]\n    });\n    this.rBush_.insert(geometry.getExtent(), segmentData);\n  }\n\n  /**\n   * @param {module:ol/Feature} feature Feature\n   * @param {module:ol/geom/Polygon} geometry Geometry.\n   * @private\n   */\n  writePolygonGeometry_(feature, geometry) {\n    const rings = geometry.getCoordinates();\n    for (let j = 0, jj = rings.length; j < jj; ++j) {\n      const coordinates = rings[j];\n      for (let i = 0, ii = coordinates.length - 1; i < ii; ++i) {\n        const segment = coordinates.slice(i, i + 2);\n        const segmentData = /** @type {module:ol/interaction/Snap~SegmentData} */ ({\n          feature: feature,\n          segment: segment\n        });\n        this.rBush_.insert(boundingExtent(segment), segmentData);\n      }\n    }\n  }\n}\n\n\n/**\n * Handle all pointer events events.\n * @param {module:ol/MapBrowserEvent} evt A move event.\n * @return {boolean} Pass the event to other interactions.\n * @this {module:ol/interaction/Snap}\n */\nexport function handleEvent(evt) {\n  const result = this.snapTo(evt.pixel, evt.coordinate, evt.map);\n  if (result.snapped) {\n    evt.coordinate = result.vertex.slice(0, 2);\n    evt.pixel = result.vertexPixel;\n  }\n  return handlePointerEvent.call(this, evt);\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} evt Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/Snap}\n */\nfunction handleUpEvent(evt) {\n  const featuresToUpdate = getValues(this.pendingFeatures_);\n  if (featuresToUpdate.length) {\n    featuresToUpdate.forEach(this.updateFeature_.bind(this));\n    this.pendingFeatures_ = {};\n  }\n  return false;\n}\n\n\n/**\n * Sort segments by distance, helper function\n * @param {module:ol/interaction/Snap~SegmentData} a The first segment data.\n * @param {module:ol/interaction/Snap~SegmentData} b The second segment data.\n * @return {number} The difference in distance.\n * @this {module:ol/interaction/Snap}\n */\nfunction sortByDistance(a, b) {\n  const deltaA = squaredDistanceToSegment(this.pixelCoordinate_, a.segment);\n  const deltaB = squaredDistanceToSegment(this.pixelCoordinate_, b.segment);\n  return deltaA - deltaB;\n}\n\nexport default Snap;\n"],"names":["super","const","let","this"],"mappings":"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"}