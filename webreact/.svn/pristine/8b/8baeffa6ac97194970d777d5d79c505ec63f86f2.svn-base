{"version":3,"file":"Geolocation.js","sources":["../../src/ol/Geolocation.js"],"sourcesContent":["/**\n * @module ol/Geolocation\n */\nimport GeolocationProperty from './GeolocationProperty.js';\nimport BaseObject, {getChangeEventType} from './Object.js';\nimport {listen} from './events.js';\nimport EventType from './events/EventType.js';\nimport {circular as circularPolygon} from './geom/Polygon.js';\nimport {GEOLOCATION} from './has.js';\nimport {toRadians} from './math.js';\nimport {get as getProjection, getTransformFromProjections, identityTransform} from './proj.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [tracking=false] Start Tracking right after\n * instantiation.\n * @property {PositionOptions} [trackingOptions] Tracking options.\n * See http://www.w3.org/TR/geolocation-API/#position_options_interface.\n * @property {module:ol/proj~ProjectionLike} [projection] The projection the position\n * is reported in.\n */\n\n\n/**\n * @classdesc\n * Helper class for providing HTML5 Geolocation capabilities.\n * The [Geolocation API](http://www.w3.org/TR/geolocation-API/)\n * is used to locate a user's position.\n *\n * To get notified of position changes, register a listener for the generic\n * `change` event on your instance of {@link module:ol/Geolocation~Geolocation}.\n *\n * Example:\n *\n *     var geolocation = new Geolocation({\n *       // take the projection to use from the map's view\n *       projection: view.getProjection()\n *     });\n *     // listen to changes in position\n *     geolocation.on('change', function(evt) {\n *       window.console.log(geolocation.getPosition());\n *     });\n *\n * @fires error\n * @api\n */\nclass Geolocation extends BaseObject {\n\n  /**\n   * @param {module:ol/Geolocation~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super();\n\n    const options = opt_options || {};\n\n    /**\n     * The unprojected (EPSG:4326) device position.\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.position_ = null;\n\n    /**\n     * @private\n     * @type {module:ol/proj~TransformFunction}\n     */\n    this.transform_ = identityTransform;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.watchId_ = undefined;\n\n    listen(\n      this, getChangeEventType(GeolocationProperty.PROJECTION),\n      this.handleProjectionChanged_, this);\n    listen(\n      this, getChangeEventType(GeolocationProperty.TRACKING),\n      this.handleTrackingChanged_, this);\n\n    if (options.projection !== undefined) {\n      this.setProjection(options.projection);\n    }\n    if (options.trackingOptions !== undefined) {\n      this.setTrackingOptions(options.trackingOptions);\n    }\n\n    this.setTracking(options.tracking !== undefined ? options.tracking : false);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  disposeInternal() {\n    this.setTracking(false);\n    super.disposeInternal();\n  }\n\n  /**\n   * @private\n   */\n  handleProjectionChanged_() {\n    const projection = this.getProjection();\n    if (projection) {\n      this.transform_ = getTransformFromProjections(\n        getProjection('EPSG:4326'), projection);\n      if (this.position_) {\n        this.set(GeolocationProperty.POSITION, this.transform_(this.position_));\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  handleTrackingChanged_() {\n    if (GEOLOCATION) {\n      const tracking = this.getTracking();\n      if (tracking && this.watchId_ === undefined) {\n        this.watchId_ = navigator.geolocation.watchPosition(\n          this.positionChange_.bind(this),\n          this.positionError_.bind(this),\n          this.getTrackingOptions());\n      } else if (!tracking && this.watchId_ !== undefined) {\n        navigator.geolocation.clearWatch(this.watchId_);\n        this.watchId_ = undefined;\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Position} position position event.\n   */\n  positionChange_(position) {\n    const coords = position.coords;\n    this.set(GeolocationProperty.ACCURACY, coords.accuracy);\n    this.set(GeolocationProperty.ALTITUDE,\n      coords.altitude === null ? undefined : coords.altitude);\n    this.set(GeolocationProperty.ALTITUDE_ACCURACY,\n      coords.altitudeAccuracy === null ?\n        undefined : coords.altitudeAccuracy);\n    this.set(GeolocationProperty.HEADING, coords.heading === null ?\n      undefined : toRadians(coords.heading));\n    if (!this.position_) {\n      this.position_ = [coords.longitude, coords.latitude];\n    } else {\n      this.position_[0] = coords.longitude;\n      this.position_[1] = coords.latitude;\n    }\n    const projectedPosition = this.transform_(this.position_);\n    this.set(GeolocationProperty.POSITION, projectedPosition);\n    this.set(GeolocationProperty.SPEED,\n      coords.speed === null ? undefined : coords.speed);\n    const geometry = circularPolygon(this.position_, coords.accuracy);\n    geometry.applyTransform(this.transform_);\n    this.set(GeolocationProperty.ACCURACY_GEOMETRY, geometry);\n    this.changed();\n  }\n\n  /**\n   * Triggered when the Geolocation returns an error.\n   * @event error\n   * @api\n   */\n\n  /**\n   * @private\n   * @param {PositionError} error error object.\n   */\n  positionError_(error) {\n    error.type = EventType.ERROR;\n    this.setTracking(false);\n    this.dispatchEvent(/** @type {{type: string, target: undefined}} */ (error));\n  }\n\n  /**\n   * Get the accuracy of the position in meters.\n   * @return {number|undefined} The accuracy of the position measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAccuracy() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ACCURACY));\n  }\n\n  /**\n   * Get a geometry of the position accuracy.\n   * @return {?module:ol/geom/Polygon} A geometry of the position accuracy.\n   * @observable\n   * @api\n   */\n  getAccuracyGeometry() {\n    return (\n      /** @type {?module:ol/geom/Polygon} */ (this.get(GeolocationProperty.ACCURACY_GEOMETRY) || null)\n    );\n  }\n\n  /**\n   * Get the altitude associated with the position.\n   * @return {number|undefined} The altitude of the position in meters above mean\n   *     sea level.\n   * @observable\n   * @api\n   */\n  getAltitude() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE));\n  }\n\n  /**\n   * Get the altitude accuracy of the position.\n   * @return {number|undefined} The accuracy of the altitude measurement in\n   *     meters.\n   * @observable\n   * @api\n   */\n  getAltitudeAccuracy() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.ALTITUDE_ACCURACY));\n  }\n\n  /**\n   * Get the heading as radians clockwise from North.\n   * Note: depending on the browser, the heading is only defined if the `enableHighAccuracy`\n   * is set to `true` in the tracking options.\n   * @return {number|undefined} The heading of the device in radians from north.\n   * @observable\n   * @api\n   */\n  getHeading() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.HEADING));\n  }\n\n  /**\n   * Get the position of the device.\n   * @return {module:ol/coordinate~Coordinate|undefined} The current position of the device reported\n   *     in the current projection.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return (\n      /** @type {module:ol/coordinate~Coordinate|undefined} */ (this.get(GeolocationProperty.POSITION))\n    );\n  }\n\n  /**\n   * Get the projection associated with the position.\n   * @return {module:ol/proj/Projection|undefined} The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  getProjection() {\n    return (\n      /** @type {module:ol/proj/Projection|undefined} */ (this.get(GeolocationProperty.PROJECTION))\n    );\n  }\n\n  /**\n   * Get the speed in meters per second.\n   * @return {number|undefined} The instantaneous speed of the device in meters\n   *     per second.\n   * @observable\n   * @api\n   */\n  getSpeed() {\n    return /** @type {number|undefined} */ (this.get(GeolocationProperty.SPEED));\n  }\n\n  /**\n   * Determine if the device location is being tracked.\n   * @return {boolean} The device location is being tracked.\n   * @observable\n   * @api\n   */\n  getTracking() {\n    return /** @type {boolean} */ (this.get(GeolocationProperty.TRACKING));\n  }\n\n  /**\n   * Get the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @return {PositionOptions|undefined} PositionOptions as defined by\n   *     the [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  getTrackingOptions() {\n    return /** @type {PositionOptions|undefined} */ (this.get(GeolocationProperty.TRACKING_OPTIONS));\n  }\n\n  /**\n   * Set the projection to use for transforming the coordinates.\n   * @param {module:ol/proj~ProjectionLike} projection The projection the position is\n   *     reported in.\n   * @observable\n   * @api\n   */\n  setProjection(projection) {\n    this.set(GeolocationProperty.PROJECTION, getProjection(projection));\n  }\n\n  /**\n   * Enable or disable tracking.\n   * @param {boolean} tracking Enable tracking.\n   * @observable\n   * @api\n   */\n  setTracking(tracking) {\n    this.set(GeolocationProperty.TRACKING, tracking);\n  }\n\n  /**\n   * Set the tracking options.\n   * See http://www.w3.org/TR/geolocation-API/#position-options.\n   * @param {PositionOptions} options PositionOptions as defined by the\n   *     [HTML5 Geolocation spec\n   *     ](http://www.w3.org/TR/geolocation-API/#position_options_interface).\n   * @observable\n   * @api\n   */\n  setTrackingOptions(options) {\n    this.set(GeolocationProperty.TRACKING_OPTIONS, options);\n  }\n}\n\n\nexport default Geolocation;\n"],"names":["super","const"],"mappings":"AAAA;;;AAGA,OAAO,mBAAmB,MAAM,0BAA0B,CAAC;AAC3D,OAAO,UAAU,GAAG,kBAAkB,OAAO,aAAa,CAAC;AAC3D,QAAQ,MAAM,OAAO,aAAa,CAAC;AACnC,OAAO,SAAS,MAAM,uBAAuB,CAAC;AAC9C,QAAQ,QAAQ,IAAI,eAAe,OAAO,mBAAmB,CAAC;AAC9D,QAAQ,WAAW,OAAO,UAAU,CAAC;AACrC,QAAQ,SAAS,OAAO,WAAW,CAAC;AACpC,QAAQ,GAAG,IAAI,aAAa,EAAE,2BAA2B,EAAE,iBAAiB,OAAO,WAAW,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqC/F,IAAM,WAAW,GAAmB;EAKlC,oBAAW,CAAC,WAAW,EAAE;;IAEvBA,eAAK,KAAC,CAAC,CAAC;;IAERC,GAAK,CAAC,OAAO,GAAG,WAAW,IAAI,EAAE,CAAC;;;;;;;IAOlC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;;;;;;IAMtB,IAAI,CAAC,UAAU,GAAG,iBAAiB,CAAC;;;;;;IAMpC,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;;IAE1B,MAAM;MACJ,IAAI,EAAE,kBAAkB,CAAC,mBAAmB,CAAC,UAAU,CAAC;MACxD,IAAI,CAAC,wBAAwB,EAAE,IAAI,CAAC,CAAC;IACvC,MAAM;MACJ,IAAI,EAAE,kBAAkB,CAAC,mBAAmB,CAAC,QAAQ,CAAC;MACtD,IAAI,CAAC,sBAAsB,EAAE,IAAI,CAAC,CAAC;;IAErC,IAAI,OAAO,CAAC,UAAU,KAAK,SAAS,EAAE;MACpC,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;KACxC;IACD,IAAI,OAAO,CAAC,eAAe,KAAK,SAAS,EAAE;MACzC,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,eAAe,CAAC,CAAC;KAClD;;IAED,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,KAAK,SAAS,GAAG,OAAO,CAAC,QAAQ,GAAG,KAAK,CAAC,CAAC;;;;;;kDAE7E;;;;;wBAKD,2CAAe,GAAG;IAChB,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACxBD,oBAAK,CAAC,oBAAe,KAAC,CAAC,CAAC;IACzB;;;;;wBAKD,6DAAwB,GAAG;IACzBC,GAAK,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;IACxC,IAAI,UAAU,EAAE;MACd,IAAI,CAAC,UAAU,GAAG,2BAA2B;QAC3C,aAAa,CAAC,WAAW,CAAC,EAAE,UAAU,CAAC,CAAC;MAC1C,IAAI,IAAI,CAAC,SAAS,EAAE;QAClB,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;OACzE;KACF;IACF;;;;;wBAKD,yDAAsB,GAAG;IACvB,IAAI,WAAW,EAAE;MACfA,GAAK,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;MACpC,IAAI,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;QAC3C,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,WAAW,CAAC,aAAa;UACjD,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,IAAI,CAAC;UAC/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;UAC9B,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC;OAC9B,MAAM,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,KAAK,SAAS,EAAE;QACnD,SAAS,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;OAC3B;KACF;IACF;;;;;;wBAMD,2CAAe,CAAC,QAAQ,EAAE;IACxBA,GAAK,CAAC,MAAM,GAAG,QAAQ,CAAC,MAAM,CAAC;IAC/B,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;IACxD,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,QAAQ;MACnC,MAAM,CAAC,QAAQ,KAAK,IAAI,GAAG,SAAS,GAAG,MAAM,CAAC,QAAQ,CAAC,CAAC;IAC1D,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,iBAAiB;MAC5C,MAAM,CAAC,gBAAgB,KAAK,IAAI;QAC9B,SAAS,GAAG,MAAM,CAAC,gBAAgB,CAAC,CAAC;IACzC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,OAAO,EAAE,MAAM,CAAC,OAAO,KAAK,IAAI;MAC3D,SAAS,GAAG,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC;IACzC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;MACnB,IAAI,CAAC,SAAS,GAAG,CAAC,MAAM,CAAC,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;KACtD,MAAM;MACL,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC;MACrC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,MAAM,CAAC,QAAQ,CAAC;KACrC;IACDA,GAAK,CAAC,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1D,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,QAAQ,EAAE,iBAAiB,CAAC,CAAC;IAC1D,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK;MAChC,MAAM,CAAC,KAAK,KAAK,IAAI,GAAG,SAAS,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;IACpDA,GAAK,CAAC,QAAQ,GAAG,eAAe,CAAC,IAAI,CAAC,SAAS,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC;IAClE,QAAQ,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IACzC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,iBAAiB,EAAE,QAAQ,CAAC,CAAC;IAC1D,IAAI,CAAC,OAAO,EAAE,CAAC;IAChB;;;;;;;;;;;;wBAYD,yCAAc,CAAC,KAAK,EAAE;IACpB,KAAK,CAAC,IAAI,GAAG,SAAS,CAAC,KAAK,CAAC;IAC7B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;IACxB,IAAI,CAAC,aAAa,kDAAkD,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9E;;;;;;;;;wBASD,mCAAW,GAAG;IACZ,uCAAuC,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC;IACjF;;;;;;;;wBAQD,mDAAmB,GAAG;IACpB,OAAO;6CACkC,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,IAAI,IAAI,CAAC;KACjG,CAAC;IACH;;;;;;;;;wBASD,mCAAW,GAAG;IACZ,uCAAuC,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC;IACjF;;;;;;;;;wBASD,mDAAmB,GAAG;IACpB,uCAAuC,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,iBAAiB,CAAC,CAAC,CAAC;IAC1F;;;;;;;;;;wBAUD,iCAAU,GAAG;IACX,uCAAuC,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,CAAC;IAChF;;;;;;;;;wBASD,mCAAW,GAAG;IACZ,OAAO;+DACoD,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;KAClG,CAAC;IACH;;;;;;;;;wBASD,uCAAa,GAAG;IACd,OAAO;yDAC8C,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,UAAU,CAAC,CAAC;KAC9F,CAAC;IACH;;;;;;;;;wBASD,6BAAQ,GAAG;IACT,uCAAuC,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,CAAC;IAC9E;;;;;;;;wBAQD,mCAAW,GAAG;IACZ,8BAA8B,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC,CAAC;IACxE;;;;;;;;;;;wBAWD,iDAAkB,GAAG;IACnB,gDAAgD,CAAC,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,gBAAgB,CAAC,CAAC,CAAC;IAClG;;;;;;;;;wBASD,uCAAa,CAAC,UAAU,EAAE;IACxB,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,UAAU,EAAE,aAAa,CAAC,UAAU,CAAC,CAAC,CAAC;IACrE;;;;;;;;wBAQD,mCAAW,CAAC,QAAQ,EAAE;IACpB,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;IAClD;;;;;;;;;;;wBAWD,iDAAkB,CAAC,OAAO,EAAE;IAC1B,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,gBAAgB,EAAE,OAAO,CAAC,CAAC;GACzD;;;EA3RuB,aA4RzB;;;AAGD,eAAe,WAAW,CAAC;"}