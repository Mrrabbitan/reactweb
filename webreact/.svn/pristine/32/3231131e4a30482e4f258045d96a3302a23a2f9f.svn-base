{"version":3,"file":"PinchRotate.js","sources":["../../../src/ol/interaction/PinchRotate.js"],"sourcesContent":["/**\n * @module ol/interaction/PinchRotate\n */\nimport ViewHint from '../ViewHint.js';\nimport {FALSE} from '../functions.js';\nimport {rotate, rotateWithoutConstraints} from '../interaction/Interaction.js';\nimport PointerInteraction, {centroid as centroidFromPointers} from '../interaction/Pointer.js';\nimport {disable} from '../rotationconstraint.js';\n\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {module:ol/interaction/PinchRotate~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleDownEvent: handleDownEvent,\n      handleDragEvent: handleDragEvent,\n      handleUpEvent: handleUpEvent,\n      stopDown: FALSE\n    });\n\n    const options = opt_options || {};\n\n    /**\n     * @private\n     * @type {module:ol/coordinate~Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n  }\n\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDragEvent(mapBrowserEvent) {\n  let rotationDelta = 0.0;\n\n  const touch0 = this.targetPointers[0];\n  const touch1 = this.targetPointers[1];\n\n  // angle between touches\n  const angle = Math.atan2(\n    touch1.clientY - touch0.clientY,\n    touch1.clientX - touch0.clientX);\n\n  if (this.lastAngle_ !== undefined) {\n    const delta = angle - this.lastAngle_;\n    this.rotationDelta_ += delta;\n    if (!this.rotating_ &&\n        Math.abs(this.rotationDelta_) > this.threshold_) {\n      this.rotating_ = true;\n    }\n    rotationDelta = delta;\n  }\n  this.lastAngle_ = angle;\n\n  const map = mapBrowserEvent.map;\n  const view = map.getView();\n  if (view.getConstraints().rotation === disable) {\n    return;\n  }\n\n  // rotate anchor point.\n  // FIXME: should be the intersection point between the lines:\n  //     touch0,touch1 and previousTouch0,previousTouch1\n  const viewportPosition = map.getViewport().getBoundingClientRect();\n  const centroid = centroidFromPointers(this.targetPointers);\n  centroid[0] -= viewportPosition.left;\n  centroid[1] -= viewportPosition.top;\n  this.anchor_ = map.getCoordinateFromPixel(centroid);\n\n  // rotate\n  if (this.rotating_) {\n    const rotation = view.getRotation();\n    map.render();\n    rotateWithoutConstraints(view, rotation + rotationDelta, this.anchor_);\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Stop drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleUpEvent(mapBrowserEvent) {\n  if (this.targetPointers.length < 2) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.setHint(ViewHint.INTERACTING, -1);\n    if (this.rotating_) {\n      const rotation = view.getRotation();\n      rotate(view, rotation, this.anchor_, this.duration_);\n    }\n    return false;\n  } else {\n    return true;\n  }\n}\n\n\n/**\n * @param {module:ol/MapBrowserPointerEvent} mapBrowserEvent Event.\n * @return {boolean} Start drag sequence?\n * @this {module:ol/interaction/PinchRotate}\n */\nfunction handleDownEvent(mapBrowserEvent) {\n  if (this.targetPointers.length >= 2) {\n    const map = mapBrowserEvent.map;\n    this.anchor_ = null;\n    this.lastAngle_ = undefined;\n    this.rotating_ = false;\n    this.rotationDelta_ = 0.0;\n    if (!this.handlingDownUpSequence) {\n      map.getView().setHint(ViewHint.INTERACTING, 1);\n    }\n    return true;\n  } else {\n    return false;\n  }\n}\n\nexport default PinchRotate;\n"],"names":["super","const","let"],"mappings":"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"}