{"version":3,"file":"ImageLayer.js","sources":["../../../../src/ol/renderer/webgl/ImageLayer.js"],"sourcesContent":["/**\n * @module ol/renderer/webgl/ImageLayer\n */\nimport {ENABLE_RASTER_REPROJECTION} from '../../reproj/common.js';\nimport {TRUE, UNDEFINED} from '../../functions.js';\nimport LayerType from '../../LayerType.js';\nimport ViewHint from '../../ViewHint.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {getIntersection, isEmpty} from '../../extent.js';\nimport WebGLLayerRenderer from '../webgl/Layer.js';\nimport {\n  create as createTransform,\n  rotate as rotateTransform,\n  translate as translateTransform,\n  scale as scaleTransform,\n  reset as resetTransform,\n  apply as applyTransform,\n  invert as invertTransform,\n  multiply as multiplyTransform\n} from '../../transform.js';\nimport {CLAMP_TO_EDGE} from '../../webgl.js';\nimport {createTexture} from '../../webgl/Context.js';\n\n/**\n * @classdesc\n * WebGL renderer for image layers.\n * @api\n */\nclass WebGLImageLayerRenderer extends WebGLLayerRenderer {\n\n  /**\n   * @param {module:ol/renderer/webgl/Map} mapRenderer Map renderer.\n   * @param {module:ol/layer/Image} imageLayer Tile layer.\n   */\n  constructor(mapRenderer, imageLayer) {\n\n    super(mapRenderer, imageLayer);\n\n    /**\n     * The last rendered image.\n     * @private\n     * @type {?module:ol/ImageBase}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitCanvasContext_ = null;\n\n    /**\n     * @private\n     * @type {?module:ol/transform~Transform}\n     */\n    this.hitTransformationMatrix_ = null;\n\n  }\n\n  /**\n   * @param {module:ol/ImageBase} image Image.\n   * @private\n   * @return {WebGLTexture} Texture.\n   */\n  createTexture_(image) {\n\n    // We meet the conditions to work with non-power of two textures.\n    // http://www.khronos.org/webgl/wiki/WebGL_and_OpenGL_Differences#Non-Power_of_Two_Texture_Support\n    // http://learningwebgl.com/blog/?p=2101\n\n    const imageElement = image.getImage();\n    const gl = this.mapRenderer.getGL();\n\n    return createTexture(\n      gl, imageElement, CLAMP_TO_EDGE, CLAMP_TO_EDGE);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachFeatureAtCoordinate(coordinate, frameState, hitTolerance, callback, thisArg) {\n    const layer = this.getLayer();\n    const source = layer.getSource();\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const skippedFeatureUids = frameState.skippedFeatureUids;\n    return source.forEachFeatureAtCoordinate(\n      coordinate, resolution, rotation, hitTolerance, skippedFeatureUids,\n\n      /**\n       * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n       * @return {?} Callback result.\n       */\n      function(feature) {\n        return callback.call(thisArg, feature, layer);\n      });\n  }\n\n  /**\n   * @inheritDoc\n   */\n  prepareFrame(frameState, layerState, context) {\n\n    const gl = this.mapRenderer.getGL();\n\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const viewRotation = viewState.rotation;\n\n    let image = this.image_;\n    let texture = this.texture;\n    const imageLayer = /** @type {module:ol/layer/Image} */ (this.getLayer());\n    const imageSource = imageLayer.getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(renderedExtent, layerState.extent);\n    }\n    if (!hints[ViewHint.ANIMATING] && !hints[ViewHint.INTERACTING] &&\n        !isEmpty(renderedExtent)) {\n      let projection = viewState.projection;\n      if (!ENABLE_RASTER_REPROJECTION) {\n        const sourceProjection = imageSource.getProjection();\n        if (sourceProjection) {\n          projection = sourceProjection;\n        }\n      }\n      const image_ = imageSource.getImage(renderedExtent, viewResolution,\n        pixelRatio, projection);\n      if (image_) {\n        const loaded = this.loadImage(image_);\n        if (loaded) {\n          image = image_;\n          texture = this.createTexture_(image_);\n          if (this.texture) {\n            /**\n             * @param {WebGLRenderingContext} gl GL.\n             * @param {WebGLTexture} texture Texture.\n             */\n            const postRenderFunction = function(gl, texture) {\n              if (!gl.isContextLost()) {\n                gl.deleteTexture(texture);\n              }\n            }.bind(null, gl, this.texture);\n            frameState.postRenderFunctions.push(\n              /** @type {module:ol/PluggableMap~PostRenderFunction} */ (postRenderFunction)\n            );\n          }\n        }\n      }\n    }\n\n    if (image) {\n      const canvas = this.mapRenderer.getContext().getCanvas();\n\n      this.updateProjectionMatrix_(canvas.width, canvas.height,\n        pixelRatio, viewCenter, viewResolution, viewRotation,\n        image.getExtent());\n      this.hitTransformationMatrix_ = null;\n\n      // Translate and scale to flip the Y coord.\n      const texCoordMatrix = this.texCoordMatrix;\n      resetTransform(texCoordMatrix);\n      scaleTransform(texCoordMatrix, 1, -1);\n      translateTransform(texCoordMatrix, 0, -1);\n\n      this.image_ = image;\n      this.texture = texture;\n    }\n\n    return !!image;\n  }\n\n  /**\n   * @param {number} canvasWidth Canvas width.\n   * @param {number} canvasHeight Canvas height.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {module:ol/coordinate~Coordinate} viewCenter View center.\n   * @param {number} viewResolution View resolution.\n   * @param {number} viewRotation View rotation.\n   * @param {module:ol/extent~Extent} imageExtent Image extent.\n   * @private\n   */\n  updateProjectionMatrix_(\n    canvasWidth,\n    canvasHeight,\n    pixelRatio,\n    viewCenter,\n    viewResolution,\n    viewRotation,\n    imageExtent\n  ) {\n\n    const canvasExtentWidth = canvasWidth * viewResolution;\n    const canvasExtentHeight = canvasHeight * viewResolution;\n\n    const projectionMatrix = this.projectionMatrix;\n    resetTransform(projectionMatrix);\n    scaleTransform(projectionMatrix,\n      pixelRatio * 2 / canvasExtentWidth,\n      pixelRatio * 2 / canvasExtentHeight);\n    rotateTransform(projectionMatrix, -viewRotation);\n    translateTransform(projectionMatrix,\n      imageExtent[0] - viewCenter[0],\n      imageExtent[1] - viewCenter[1]);\n    scaleTransform(projectionMatrix,\n      (imageExtent[2] - imageExtent[0]) / 2,\n      (imageExtent[3] - imageExtent[1]) / 2);\n    translateTransform(projectionMatrix, 1, 1);\n\n  }\n\n  /**\n   * @inheritDoc\n   */\n  hasFeatureAtCoordinate(coordinate, frameState) {\n    const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @inheritDoc\n   */\n  forEachLayerAtPixel(pixel, frameState, callback, thisArg) {\n    if (!this.image_ || !this.image_.getImage()) {\n      return undefined;\n    }\n\n    if (this.getLayer().getSource().forEachFeatureAtCoordinate !== UNDEFINED) {\n      // for ImageCanvas sources use the original hit-detection logic,\n      // so that for example also transparent polygons are detected\n      const coordinate = applyTransform(\n        frameState.pixelToCoordinateTransform, pixel.slice());\n      const hasFeature = this.forEachFeatureAtCoordinate(coordinate, frameState, 0, TRUE, this);\n\n      if (hasFeature) {\n        return callback.call(thisArg, this.getLayer(), null);\n      } else {\n        return undefined;\n      }\n    } else {\n      const imageSize =\n          [this.image_.getImage().width, this.image_.getImage().height];\n\n      if (!this.hitTransformationMatrix_) {\n        this.hitTransformationMatrix_ = this.getHitTransformationMatrix_(\n          frameState.size, imageSize);\n      }\n\n      const pixelOnFrameBuffer = applyTransform(\n        this.hitTransformationMatrix_, pixel.slice());\n\n      if (pixelOnFrameBuffer[0] < 0 || pixelOnFrameBuffer[0] > imageSize[0] ||\n          pixelOnFrameBuffer[1] < 0 || pixelOnFrameBuffer[1] > imageSize[1]) {\n        // outside the image, no need to check\n        return undefined;\n      }\n\n      if (!this.hitCanvasContext_) {\n        this.hitCanvasContext_ = createCanvasContext2D(1, 1);\n      }\n\n      this.hitCanvasContext_.clearRect(0, 0, 1, 1);\n      this.hitCanvasContext_.drawImage(this.image_.getImage(),\n        pixelOnFrameBuffer[0], pixelOnFrameBuffer[1], 1, 1, 0, 0, 1, 1);\n\n      const imageData = this.hitCanvasContext_.getImageData(0, 0, 1, 1).data;\n      if (imageData[3] > 0) {\n        return callback.call(thisArg, this.getLayer(), imageData);\n      } else {\n        return undefined;\n      }\n    }\n  }\n\n  /**\n   * The transformation matrix to get the pixel on the image for a\n   * pixel on the map.\n   * @param {module:ol/size~Size} mapSize The map size.\n   * @param {module:ol/size~Size} imageSize The image size.\n   * @return {module:ol/transform~Transform} The transformation matrix.\n   * @private\n   */\n  getHitTransformationMatrix_(mapSize, imageSize) {\n    // the first matrix takes a map pixel, flips the y-axis and scales to\n    // a range between -1 ... 1\n    const mapCoordTransform = createTransform();\n    translateTransform(mapCoordTransform, -1, -1);\n    scaleTransform(mapCoordTransform, 2 / mapSize[0], 2 / mapSize[1]);\n    translateTransform(mapCoordTransform, 0, mapSize[1]);\n    scaleTransform(mapCoordTransform, 1, -1);\n\n    // the second matrix is the inverse of the projection matrix used in the\n    // shader for drawing\n    const projectionMatrixInv = invertTransform(this.projectionMatrix.slice());\n\n    // the third matrix scales to the image dimensions and flips the y-axis again\n    const transform = createTransform();\n    translateTransform(transform, 0, imageSize[1]);\n    scaleTransform(transform, 1, -1);\n    scaleTransform(transform, imageSize[0] / 2, imageSize[1] / 2);\n    translateTransform(transform, 1, 1);\n\n    multiplyTransform(transform, projectionMatrixInv);\n    multiplyTransform(transform, mapCoordTransform);\n\n    return transform;\n  }\n}\n\n\n/**\n * Determine if this renderer handles the provided layer.\n * @param {module:ol/layer/Layer} layer The candidate layer.\n * @return {boolean} The renderer can render the layer.\n */\nWebGLImageLayerRenderer['handles'] = function(layer) {\n  return layer.getType() === LayerType.IMAGE;\n};\n\n\n/**\n * Create a layer renderer.\n * @param {module:ol/renderer/Map} mapRenderer The map renderer.\n * @param {module:ol/layer/Layer} layer The layer to be rendererd.\n * @return {module:ol/renderer/webgl/ImageLayer} The layer renderer.\n */\nWebGLImageLayerRenderer['create'] = function(mapRenderer, layer) {\n  return new WebGLImageLayerRenderer(\n    /** @type {module:ol/renderer/webgl/Map} */ (mapRenderer),\n    /** @type {module:ol/layer/Image} */ (layer)\n  );\n};\n\n\nexport default WebGLImageLayerRenderer;\n"],"names":["super","const","let"],"mappings":"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"}