{"version":3,"file":"UTFGrid.js","sources":["../../../src/ol/source/UTFGrid.js"],"sourcesContent":["/**\n * @module ol/source/UTFGrid\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {createFromTemplates, nullTileUrlFunction} from '../tileurlfunction.js';\nimport {assert} from '../asserts.js';\nimport {listenOnce} from '../events.js';\nimport EventType from '../events/EventType.js';\nimport {applyTransform, intersects} from '../extent.js';\nimport {jsonp as requestJSONP} from '../net.js';\nimport {get as getProjection, getTransformFromProjections} from '../proj.js';\nimport SourceState from '../source/State.js';\nimport TileSource from '../source/Tile.js';\nimport {getKeyZXY} from '../tilecoord.js';\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\n\n\nexport class CustomTile extends Tile {\n\n  /**\n   * @param {module:ol/tilecoord~TileCoord} tileCoord Tile coordinate.\n   * @param {module:ol/TileState} state State.\n   * @param {string} src Image source URI.\n   * @param {module:ol/extent~Extent} extent Extent of the tile.\n   * @param {boolean} preemptive Load the tile when visible (before it's needed).\n   * @param {boolean} jsonp Load the tile as a script.\n   */\n  constructor(tileCoord, state, src, extent, preemptive, jsonp) {\n\n    super(tileCoord, state);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     * @type {module:ol/extent~Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = preemptive;\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.grid_ = null;\n\n    /**\n     * @private\n     * @type {Array.<string>}\n     */\n    this.keys_ = null;\n\n    /**\n     * @private\n     * @type {Object.<string, Object>|undefined}\n     */\n    this.data_ = null;\n\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = jsonp;\n\n  }\n\n}\n\n\n/**\n * Get the image element for this tile.\n * @return {HTMLImageElement} Image.\n */\nCustomTile.prototype.getImage = function() {\n  return null;\n};\n\n\n/**\n * Synchronously returns data at given coordinate (if available).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @return {*} The data.\n */\nCustomTile.prototype.getData = function(coordinate) {\n  if (!this.grid_ || !this.keys_) {\n    return null;\n  }\n  const xRelative = (coordinate[0] - this.extent_[0]) /\n      (this.extent_[2] - this.extent_[0]);\n  const yRelative = (coordinate[1] - this.extent_[1]) /\n      (this.extent_[3] - this.extent_[1]);\n\n  const row = this.grid_[Math.floor((1 - yRelative) * this.grid_.length)];\n\n  if (typeof row !== 'string') {\n    return null;\n  }\n\n  let code = row.charCodeAt(Math.floor(xRelative * row.length));\n  if (code >= 93) {\n    code--;\n  }\n  if (code >= 35) {\n    code--;\n  }\n  code -= 32;\n\n  let data = null;\n  if (code in this.keys_) {\n    const id = this.keys_[code];\n    if (this.data_ && id in this.data_) {\n      data = this.data_[id];\n    } else {\n      data = id;\n    }\n  }\n  return data;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate (or `null` if not yet loaded).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {function(this: T, *)} callback Callback.\n * @param {T=} opt_this The object to use as `this` in the callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @template T\n */\nCustomTile.prototype.forDataAtCoordinate = function(coordinate, callback, opt_this, opt_request) {\n  if (this.state == TileState.IDLE && opt_request === true) {\n    listenOnce(this, EventType.CHANGE, function(e) {\n      callback.call(opt_this, this.getData(coordinate));\n    }, this);\n    this.loadInternal_();\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback.call(opt_this, this.getData(coordinate));\n      }.bind(this), 0);\n    } else {\n      callback.call(opt_this, this.getData(coordinate));\n    }\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nCustomTile.prototype.getKey = function() {\n  return this.src_;\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.handleError_ = function() {\n  this.state = TileState.ERROR;\n  this.changed();\n};\n\n\n/**\n * @param {!UTFGridJSON} json UTFGrid data.\n * @private\n */\nCustomTile.prototype.handleLoad_ = function(json) {\n  this.grid_ = json.grid;\n  this.keys_ = json.keys;\n  this.data_ = json.data;\n\n  this.state = TileState.EMPTY;\n  this.changed();\n};\n\n\n/**\n * @private\n */\nCustomTile.prototype.loadInternal_ = function() {\n  if (this.state == TileState.IDLE) {\n    this.state = TileState.LOADING;\n    if (this.jsonp_) {\n      requestJSONP(this.src_, this.handleLoad_.bind(this),\n        this.handleError_.bind(this));\n    } else {\n      const client = new XMLHttpRequest();\n      client.addEventListener('load', this.onXHRLoad_.bind(this));\n      client.addEventListener('error', this.onXHRError_.bind(this));\n      client.open('GET', this.src_);\n      client.send();\n    }\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nCustomTile.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {!UTFGridJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleError_();\n      return;\n    }\n    this.handleLoad_(response);\n  } else {\n    this.handleError_();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nCustomTile.prototype.onXHRError_ = function(event) {\n  this.handleError_();\n};\n\n\n/**\n * @override\n */\nCustomTile.prototype.load = function() {\n  if (this.preemptive_) {\n    this.loadInternal_();\n  }\n};\n\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [preemptive=true]\n * If `true` the UTFGrid source loads the tiles based on their \"visibility\".\n * This improves the speed of response, but increases traffic.\n * Note that if set to `false`, you need to pass `true` as `opt_request`\n * to the `forDataAtCoordinateAndResolution` method otherwise no data\n * will ever be loaded.\n * @property {boolean} [jsonp=false] Use JSONP with callback to load the TileJSON.\n * Useful when the server does not support CORS..\n * @property {tileJSON} [tileJSON] TileJSON configuration for this source.\n * If not provided, `url` must be configured.\n * @property {string} [url] TileJSON endpoint that provides the configuration for this source.\n * Request will be made through JSONP. If not provided, `tileJSON` must be configured.\n */\n\n\n/**\n * @classdesc\n * Layer source for UTFGrid interaction data loaded from TileJSON format.\n * @api\n */\nclass UTFGrid extends TileSource {\n  /**\n   * @param {module:ol/source/UTFGrid~Options=} options Source options.\n   */\n  constructor(options) {\n    super({\n      projection: getProjection('EPSG:3857'),\n      state: SourceState.LOADING\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.preemptive_ = options.preemptive !== undefined ?\n      options.preemptive : true;\n\n    /**\n     * @private\n     * @type {!module:ol/Tile~UrlFunction}\n     */\n    this.tileUrlFunction_ = nullTileUrlFunction;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.template_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.jsonp_ = options.jsonp || false;\n\n    if (options.url) {\n      if (this.jsonp_) {\n        requestJSONP(options.url, this.handleTileJSONResponse.bind(this),\n          this.handleTileJSONError.bind(this));\n      } else {\n        const client = new XMLHttpRequest();\n        client.addEventListener('load', this.onXHRLoad_.bind(this));\n        client.addEventListener('error', this.onXHRError_.bind(this));\n        client.open('GET', options.url);\n        client.send();\n      }\n    } else if (options.tileJSON) {\n      this.handleTileJSONResponse(options.tileJSON);\n    } else {\n      assert(false, 51); // Either `url` or `tileJSON` options must be provided\n    }\n\n  }\n\n}\n\n\n/**\n * @private\n * @param {Event} event The load event.\n */\nUTFGrid.prototype.onXHRLoad_ = function(event) {\n  const client = /** @type {XMLHttpRequest} */ (event.target);\n  // status will be 0 for file:// urls\n  if (!client.status || client.status >= 200 && client.status < 300) {\n    let response;\n    try {\n      response = /** @type {TileJSON} */(JSON.parse(client.responseText));\n    } catch (err) {\n      this.handleTileJSONError();\n      return;\n    }\n    this.handleTileJSONResponse(response);\n  } else {\n    this.handleTileJSONError();\n  }\n};\n\n\n/**\n * @private\n * @param {Event} event The error event.\n */\nUTFGrid.prototype.onXHRError_ = function(event) {\n  this.handleTileJSONError();\n};\n\n\n/**\n * Return the template from TileJSON.\n * @return {string|undefined} The template from TileJSON.\n * @api\n */\nUTFGrid.prototype.getTemplate = function() {\n  return this.template_;\n};\n\n\n/**\n * Calls the callback (synchronously by default) with the available data\n * for given coordinate and resolution (or `null` if not yet loaded or\n * in case of an error).\n * @param {module:ol/coordinate~Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @param {function(*)} callback Callback.\n * @param {boolean=} opt_request If `true` the callback is always async.\n *                               The tile data is requested if not yet loaded.\n * @api\n */\nUTFGrid.prototype.forDataAtCoordinateAndResolution = function(\n  coordinate, resolution, callback, opt_request) {\n  if (this.tileGrid) {\n    const tileCoord = this.tileGrid.getTileCoordForCoordAndResolution(\n      coordinate, resolution);\n    const tile = /** @type {!module:ol/source/UTFGrid~CustomTile} */(this.getTile(\n      tileCoord[0], tileCoord[1], tileCoord[2], 1, this.getProjection()));\n    tile.forDataAtCoordinate(coordinate, callback, null, opt_request);\n  } else {\n    if (opt_request === true) {\n      setTimeout(function() {\n        callback(null);\n      }, 0);\n    } else {\n      callback(null);\n    }\n  }\n};\n\n\n/**\n * @protected\n */\nUTFGrid.prototype.handleTileJSONError = function() {\n  this.setState(SourceState.ERROR);\n};\n\n\n/**\n * TODO: very similar to ol/source/TileJSON#handleTileJSONResponse\n * @protected\n * @param {TileJSON} tileJSON Tile JSON.\n */\nUTFGrid.prototype.handleTileJSONResponse = function(tileJSON) {\n\n  const epsg4326Projection = getProjection('EPSG:4326');\n\n  const sourceProjection = this.getProjection();\n  let extent;\n  if (tileJSON.bounds !== undefined) {\n    const transform = getTransformFromProjections(\n      epsg4326Projection, sourceProjection);\n    extent = applyTransform(tileJSON.bounds, transform);\n  }\n\n  const minZoom = tileJSON.minzoom || 0;\n  const maxZoom = tileJSON.maxzoom || 22;\n  const tileGrid = createXYZ({\n    extent: extentFromProjection(sourceProjection),\n    maxZoom: maxZoom,\n    minZoom: minZoom\n  });\n  this.tileGrid = tileGrid;\n\n  this.template_ = tileJSON.template;\n\n  const grids = tileJSON.grids;\n  if (!grids) {\n    this.setState(SourceState.ERROR);\n    return;\n  }\n\n  this.tileUrlFunction_ = createFromTemplates(grids, tileGrid);\n\n  if (tileJSON.attribution !== undefined) {\n    const attributionExtent = extent !== undefined ?\n      extent : epsg4326Projection.getExtent();\n\n    this.setAttributions(function(frameState) {\n      if (intersects(attributionExtent, frameState.extent)) {\n        return [tileJSON.attribution];\n      }\n      return null;\n    });\n  }\n\n  this.setState(SourceState.READY);\n\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.getTile = function(z, x, y, pixelRatio, projection) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    return (\n      /** @type {!module:ol/Tile} */ (this.tileCache.get(tileCoordKey))\n    );\n  } else {\n    const tileCoord = [z, x, y];\n    const urlTileCoord =\n        this.getTileCoordForTileUrlFunction(tileCoord, projection);\n    const tileUrl = this.tileUrlFunction_(urlTileCoord, pixelRatio, projection);\n    const tile = new CustomTile(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.tileGrid.getTileCoordExtent(tileCoord),\n      this.preemptive_,\n      this.jsonp_);\n    this.tileCache.set(tileCoordKey, tile);\n    return tile;\n  }\n};\n\n\n/**\n * @inheritDoc\n */\nUTFGrid.prototype.useTile = function(z, x, y) {\n  const tileCoordKey = getKeyZXY(z, x, y);\n  if (this.tileCache.containsKey(tileCoordKey)) {\n    this.tileCache.get(tileCoordKey);\n  }\n};\n\n\nexport default UTFGrid;\n"],"names":["super","const","let"],"mappings":"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"}