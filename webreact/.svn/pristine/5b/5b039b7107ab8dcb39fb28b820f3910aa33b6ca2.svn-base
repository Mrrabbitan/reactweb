{"version":3,"file":"Select.js","sources":["../../../src/ol/interaction/Select.js"],"sourcesContent":["/**\n * @module ol/interaction/Select\n */\nimport {getUid} from '../util.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport {extend, includes} from '../array.js';\nimport {listen} from '../events.js';\nimport Event from '../events/Event.js';\nimport {singleClick, never, shiftKeyOnly, pointerMove} from '../events/condition.js';\nimport {TRUE} from '../functions.js';\nimport GeometryType from '../geom/GeometryType.js';\nimport Interaction from '../interaction/Interaction.js';\nimport VectorLayer from '../layer/Vector.js';\nimport {clear} from '../obj.js';\nimport VectorSource from '../source/Vector.js';\nimport {createEditingStyle} from '../style/Style.js';\n\n\n/**\n * @enum {string}\n */\nconst SelectEventType = {\n  /**\n   * Triggered when feature(s) has been (de)selected.\n   * @event SelectEvent#select\n   * @api\n   */\n  SELECT: 'select'\n};\n\n\n/**\n * A function that takes an {@link module:ol/Feature} or\n * {@link module:ol/render/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @typedef {function((module:ol/Feature|module:ol/render/Feature), module:ol/layer/Layer):\n *     boolean} FilterFunction\n */\n\n\n/**\n * @typedef {Object} Options\n * @property {module:ol/events/condition~Condition} [addCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [condition] A function that\n * takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is the event\n * for the selected features as a whole. By default, this is\n * {@link module:ol/events/condition~singleClick}. Clicking on a feature selects that\n * feature and removes any that were in the selection. Clicking outside any\n * feature removes all from the selection.\n * See `toggle`, `add`, `remove` options for adding/removing extra features to/\n * from the selection.\n * @property {Array.<module:ol/layer/Layer>|function(module:ol/layer/Layer): boolean} [layers]\n * A list of layers from which features should be selected. Alternatively, a\n * filter function can be provided. The function will be called for each layer\n * in the map and should return `true` for layers that you want to be\n * selectable. If the option is absent, all visible layers will be considered\n * selectable.\n * @property {module:ol/style/Style|Array.<module:ol/style/Style>|module:ol/style/Style~StyleFunction} [style]\n * Style for the selected features. By default the default edit style is used\n * (see {@link module:ol/style}).\n * @property {module:ol/events/condition~Condition} [removeCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * By default, this is {@link module:ol/events/condition~never}. Use this if you\n * want to use different events for add and remove instead of `toggle`.\n * @property {module:ol/events/condition~Condition} [toggleCondition] A function\n * that takes an {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. This is in addition\n * to the `condition` event. By default,\n * {@link module:ol/events/condition~shiftKeyOnly}, i.e. pressing `shift` as\n * well as the `condition` event, adds that feature to the current selection if\n * it is not currently selected, and removes it if it is. See `add` and `remove`\n * if you want to use different events instead of a toggle.\n * @property {boolean} [multi=false] A boolean that determines if the default\n * behaviour should select only single features or all (overlapping) features at\n * the clicked map position. The default of `false` means single select.\n * @property {module:ol/Collection.<module:ol/Feature>} [features]\n * Collection where the interaction will place selected features. Optional. If\n * not set the interaction will create a collection. In any case the collection\n * used by the interaction is returned by\n * {@link module:ol/interaction/Select~Select#getFeatures}.\n * @property {module:ol/interaction/Select~FilterFunction} [filter] A function\n * that takes an {@link module:ol/Feature} and an\n * {@link module:ol/layer/Layer} and returns `true` if the feature may be\n * selected or `false` otherwise.\n * @property {boolean} [wrapX=true] Wrap the world horizontally on the selection\n * overlay.\n * @property {number} [hitTolerance=0] Hit-detection tolerance. Pixels inside\n * the radius around the given position will be checked for features. This only\n * works for the canvas renderer and not for WebGL.\n */\n\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/Select~Select} instances are instances of\n * this type.\n */\nclass SelectEvent extends Event {\n  /**\n   * @param {SelectEventType} type The event type.\n   * @param {Array.<module:ol/Feature>} selected Selected features.\n   * @param {Array.<module:ol/Feature>} deselected Deselected features.\n   * @param {module:ol/MapBrowserEvent} mapBrowserEvent Associated\n   *     {@link module:ol/MapBrowserEvent}.\n   */\n  constructor(type, selected, deselected, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * Selected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.selected = selected;\n\n    /**\n     * Deselected features array.\n     * @type {Array.<module:ol/Feature>}\n     * @api\n     */\n    this.deselected = deselected;\n\n    /**\n     * Associated {@link module:ol/MapBrowserEvent}.\n     * @type {module:ol/MapBrowserEvent}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n\n  }\n\n}\n\n\n/**\n * @classdesc\n * Interaction for selecting vector features. By default, selected features are\n * styled differently, so this interaction can be used for visual highlighting,\n * as well as selecting features for other actions, such as modification or\n * output. There are three ways of controlling which features are selected:\n * using the browser event as defined by the `condition` and optionally the\n * `toggle`, `add`/`remove`, and `multi` options; a `layers` filter; and a\n * further feature filter using the `filter` option.\n *\n * Selected features are added to an internal unmanaged layer.\n *\n * @fires SelectEvent\n * @api\n */\nclass Select extends Interaction {\n  /**\n   * @param {module:ol/interaction/Select~Options=} opt_options Options.\n   */\n  constructor(opt_options) {\n\n    super({\n      handleEvent: handleEvent\n    });\n\n    const options = opt_options ? opt_options : {};\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.condition_ = options.condition ? options.condition : singleClick;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.addCondition_ = options.addCondition ? options.addCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.removeCondition_ = options.removeCondition ? options.removeCondition : never;\n\n    /**\n     * @private\n     * @type {module:ol/events/condition~Condition}\n     */\n    this.toggleCondition_ = options.toggleCondition ? options.toggleCondition : shiftKeyOnly;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.multi_ = options.multi ? options.multi : false;\n\n    /**\n     * @private\n     * @type {module:ol/interaction/Select~FilterFunction}\n     */\n    this.filter_ = options.filter ? options.filter : TRUE;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.hitTolerance_ = options.hitTolerance ? options.hitTolerance : 0;\n\n    const featureOverlay = new VectorLayer({\n      source: new VectorSource({\n        useSpatialIndex: false,\n        features: options.features,\n        wrapX: options.wrapX\n      }),\n      style: options.style ? options.style :\n        getDefaultStyleFunction(),\n      updateWhileAnimating: true,\n      updateWhileInteracting: true\n    });\n\n    /**\n     * @private\n     * @type {module:ol/layer/Vector}\n     */\n    this.featureOverlay_ = featureOverlay;\n\n    /** @type {function(module:ol/layer/Layer): boolean} */\n    let layerFilter;\n    if (options.layers) {\n      if (typeof options.layers === 'function') {\n        layerFilter = options.layers;\n      } else {\n        const layers = options.layers;\n        layerFilter = function(layer) {\n          return includes(layers, layer);\n        };\n      }\n    } else {\n      layerFilter = TRUE;\n    }\n\n    /**\n     * @private\n     * @type {function(module:ol/layer/Layer): boolean}\n     */\n    this.layerFilter_ = layerFilter;\n\n    /**\n     * An association between selected feature (key)\n     * and layer (value)\n     * @private\n     * @type {Object.<number, module:ol/layer/Layer>}\n     */\n    this.featureLayerAssociation_ = {};\n\n    const features = this.featureOverlay_.getSource().getFeaturesCollection();\n    listen(features, CollectionEventType.ADD,\n      this.addFeature_, this);\n    listen(features, CollectionEventType.REMOVE,\n      this.removeFeature_, this);\n\n  }\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @param {module:ol/layer/Layer} layer Layer.\n   * @private\n   */\n  addFeatureLayerAssociation_(feature, layer) {\n    const key = getUid(feature);\n    this.featureLayerAssociation_[key] = layer;\n  }\n\n  /**\n   * Get the selected features.\n   * @return {module:ol/Collection.<module:ol/Feature>} Features collection.\n   * @api\n   */\n  getFeatures() {\n    return this.featureOverlay_.getSource().getFeaturesCollection();\n  }\n\n  /**\n   * Returns the Hit-detection tolerance.\n   * @returns {number} Hit tolerance in pixels.\n   * @api\n   */\n  getHitTolerance() {\n    return this.hitTolerance_;\n  }\n\n  /**\n   * Returns the associated {@link module:ol/layer/Vector~Vector vectorlayer} of\n   * the (last) selected feature. Note that this will not work with any\n   * programmatic method like pushing features to\n   * {@link module:ol/interaction/Select~Select#getFeatures collection}.\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature\n   * @return {module:ol/layer/Vector} Layer.\n   * @api\n   */\n  getLayer(feature) {\n    const key = getUid(feature);\n    return (\n      /** @type {module:ol/layer/Vector} */ (this.featureLayerAssociation_[key])\n    );\n  }\n\n  /**\n   * Hit-detection tolerance. Pixels inside the radius around the given position\n   * will be checked for features. This only works for the canvas renderer and\n   * not for WebGL.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @api\n   */\n  setHitTolerance(hitTolerance) {\n    this.hitTolerance_ = hitTolerance;\n  }\n\n  /**\n   * Remove the interaction from its current map, if any,  and attach it to a new\n   * map, if any. Pass `null` to just remove the interaction from the current map.\n   * @param {module:ol/PluggableMap} map Map.\n   * @override\n   * @api\n   */\n  setMap(map) {\n    const currentMap = this.getMap();\n    const selectedFeatures =\n        this.featureOverlay_.getSource().getFeaturesCollection();\n    if (currentMap) {\n      selectedFeatures.forEach(currentMap.unskipFeature.bind(currentMap));\n    }\n    super.setMap(map);\n    this.featureOverlay_.setMap(map);\n    if (map) {\n      selectedFeatures.forEach(map.skipFeature.bind(map));\n    }\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  addFeature_(evt) {\n    const map = this.getMap();\n    if (map) {\n      map.skipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  }\n\n  /**\n   * @param {module:ol/Collection~CollectionEvent} evt Event.\n   * @private\n   */\n  removeFeature_(evt) {\n    const map = this.getMap();\n    if (map) {\n      map.unskipFeature(/** @type {module:ol/Feature} */ (evt.element));\n    }\n  }\n\n  /**\n   * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n   * @private\n   */\n  removeFeatureLayerAssociation_(feature) {\n    const key = getUid(feature);\n    delete this.featureLayerAssociation_[key];\n  }\n}\n\n\n/**\n * Handles the {@link module:ol/MapBrowserEvent map browser event} and may change the\n * selected state of features.\n * @param {module:ol/MapBrowserEvent} mapBrowserEvent Map browser event.\n * @return {boolean} `false` to stop event propagation.\n * @this {module:ol/interaction/Select}\n */\nfunction handleEvent(mapBrowserEvent) {\n  if (!this.condition_(mapBrowserEvent)) {\n    return true;\n  }\n  const add = this.addCondition_(mapBrowserEvent);\n  const remove = this.removeCondition_(mapBrowserEvent);\n  const toggle = this.toggleCondition_(mapBrowserEvent);\n  const set = !add && !remove && !toggle;\n  const map = mapBrowserEvent.map;\n  const features = this.featureOverlay_.getSource().getFeaturesCollection();\n  const deselected = [];\n  const selected = [];\n  if (set) {\n    // Replace the currently selected feature(s) with the feature(s) at the\n    // pixel, or clear the selected feature(s) if there is no feature at\n    // the pixel.\n    clear(this.featureLayerAssociation_);\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            selected.push(feature);\n            this.addFeatureLayerAssociation_(feature, layer);\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let i = features.getLength() - 1; i >= 0; --i) {\n      const feature = features.item(i);\n      const index = selected.indexOf(feature);\n      if (index > -1) {\n        // feature is already selected\n        selected.splice(index, 1);\n      } else {\n        features.remove(feature);\n        deselected.push(feature);\n      }\n    }\n    if (selected.length !== 0) {\n      features.extend(selected);\n    }\n  } else {\n    // Modify the currently selected feature(s).\n    map.forEachFeatureAtPixel(mapBrowserEvent.pixel,\n      (\n        /**\n         * @param {module:ol/Feature|module:ol/render/Feature} feature Feature.\n         * @param {module:ol/layer/Layer} layer Layer.\n         * @return {boolean|undefined} Continue to iterate over the features.\n         */\n        function(feature, layer) {\n          if (this.filter_(feature, layer)) {\n            if ((add || toggle) && !includes(features.getArray(), feature)) {\n              selected.push(feature);\n              this.addFeatureLayerAssociation_(feature, layer);\n            } else if ((remove || toggle) && includes(features.getArray(), feature)) {\n              deselected.push(feature);\n              this.removeFeatureLayerAssociation_(feature);\n            }\n            return !this.multi_;\n          }\n        }).bind(this), {\n        layerFilter: this.layerFilter_,\n        hitTolerance: this.hitTolerance_\n      });\n    for (let j = deselected.length - 1; j >= 0; --j) {\n      features.remove(deselected[j]);\n    }\n    features.extend(selected);\n  }\n  if (selected.length > 0 || deselected.length > 0) {\n    this.dispatchEvent(\n      new SelectEvent(SelectEventType.SELECT,\n        selected, deselected, mapBrowserEvent));\n  }\n  return pointerMove(mapBrowserEvent);\n}\n\n\n/**\n * @return {module:ol/style/Style~StyleFunction} Styles.\n */\nfunction getDefaultStyleFunction() {\n  const styles = createEditingStyle();\n  extend(styles[GeometryType.POLYGON], styles[GeometryType.LINE_STRING]);\n  extend(styles[GeometryType.GEOMETRY_COLLECTION], styles[GeometryType.LINE_STRING]);\n\n  return function(feature, resolution) {\n    if (!feature.getGeometry()) {\n      return null;\n    }\n    return styles[feature.getGeometry().getType()];\n  };\n}\n\n\nexport default Select;\n"],"names":["const","super","let"],"mappings":"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"}